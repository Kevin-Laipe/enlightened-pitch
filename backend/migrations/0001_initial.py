# Generated by Django 3.2.7 on 2021-09-23 11:01

import backend.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('text', models.CharField(max_length=500)),
                ('_class', models.IntegerField(choices=[(0, 'Generic'), (1, 'Brute'), (2, 'Guardian'), (3, 'Ninja'), (4, 'Warrior'), (5, 'Mechanologist'), (6, 'Ranger'), (7, 'Runeblade'), (8, 'Wizard'), (9, 'Merchant'), (10, 'Shapeshifter'), (11, 'Illusionist')])),
                ('_type', models.IntegerField(choices=[(0, 'Action'), (1, 'Attack Reaction'), (2, 'Defense Reaction'), (3, 'Instant'), (4, 'Equipment'), (5, 'Weapon'), (6, 'Hero')])),
                ('pitch', models.IntegerField(choices=[(0, 'None'), (1, 'Red'), (2, 'Yellow'), (3, 'Blue')], default=0)),
                ('bloc', models.CharField(max_length=30)),
                ('is_banned_cc', models.BooleanField(default=False)),
                ('is_banned_blitz', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Deck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=5000)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('description', models.CharField(max_length=500)),
                ('notes', models.CharField(max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Releasenote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Set',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('tag', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Stat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Subtype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Supertype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Talent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Printing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=15, unique=True)),
                ('finish', models.CharField(choices=[('', 'Regular'), ('RF', 'Rainbow Foil'), ('CF', 'Cold Foil'), ('EA', 'Extended Art'), ('AA', 'Alternate Art')], default='', max_length=2)),
                ('image', models.ImageField(upload_to=backend.models.image_directory_path)),
                ('artist', models.CharField(max_length=30)),
                ('is_first_edition', models.BooleanField(null=True)),
                ('rarity', models.CharField(choices=[('C', 'Common'), ('R', 'Rare'), ('S', 'Super Rare'), ('M', 'Majestic'), ('L', 'Legendary'), ('F', 'Fabled'), ('P', 'Promo')], max_length=1)),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.card')),
                ('set_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.set')),
            ],
        ),
        migrations.CreateModel(
            name='DeckCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField()),
                ('in_sideboard', models.PositiveSmallIntegerField()),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.card')),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.deck')),
            ],
        ),
        migrations.CreateModel(
            name='Copy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_owned', models.PositiveSmallIntegerField()),
                ('amount_wanted', models.PositiveSmallIntegerField()),
                ('amount_trading', models.PositiveSmallIntegerField()),
                ('printing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.printing')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CardTalent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.card')),
                ('talent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.talent')),
            ],
        ),
        migrations.CreateModel(
            name='CardSupertype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.card')),
                ('supertype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.supertype')),
            ],
        ),
        migrations.CreateModel(
            name='CardSubtype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.card')),
                ('subtype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.subtype')),
            ],
        ),
        migrations.CreateModel(
            name='CardStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.SmallIntegerField()),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.card')),
                ('stat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.stat')),
            ],
        ),
        migrations.CreateModel(
            name='CardReleasenote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.card')),
                ('releasenote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.releasenote')),
            ],
        ),
        migrations.CreateModel(
            name='CardKeyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.card')),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.keyword')),
            ],
        ),
        migrations.AddConstraint(
            model_name='card',
            constraint=models.UniqueConstraint(fields=('name', 'pitch'), name='unique card'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
