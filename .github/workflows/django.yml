name: Django CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
        
    services:
      postgres:
        image: postgres:latest
        
        env:
          POSTGRES_USER: kevin
          POSTGRES_PASSWORD: kevin
          POSTGRES_DB: enlightenedpitchdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install pipenv
      run: python -m pip install --upgrade pipenv wheel
      
    - id: cache-pipenv
      uses: actions/cache@v1
      with:
        path: ~/.local/share/virualenvs
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
        
    - name: Set up PostgreSQL
      run: |
        sudo apt-get update
        sudo apt-get install postgresql libpq-dev
        sudo apt-get install --yes --no-install-recommends postgresql-client
        sudo service postgresql start
        
    - name: Install dependencies
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      run: pipenv install --dev --python ${{ matrix.python-version }}
      
    - name: Create .env file
      run: |
        touch .env
        echo DEBUG=on >> .env
        echo SECRET_KEY=lba%2wx*46d$ga$2fwywc#gxyda4m589$pxbptm5rir_uuj8a2 >> .env
        echo DATABASE_NAME=enlightenedpitchdb >> .env
        echo DATABASE_USER=kevin >> .env
        echo DATABASE_PASSWORD=kevin >> .env
        echo DATABASE_HOST=localhost >> .env
        echo DATABASE_PORT=5432 >> .env
        
    - name: Set up Django project
      run: |
        pipenv run python manage.py makemigrations
        pipenv run python manage.py migrate
      
    - name: Run Tests
      run: pipenv run python manage.py test
